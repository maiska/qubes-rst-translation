# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-16 23:45+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../developer/building/development-workflow.rst:3
#: 97e45518f23d4c1dad2839936899b684
msgid "Development workflow"
msgstr ""

#: ../../../developer/building/development-workflow.rst:6
#: 634456d4b6f649429705b4fee990799b
msgid "A workflow for developing Qubes OS+"
msgstr ""

#: ../../../developer/building/development-workflow.rst:8
#: 3faf1db71bbe448aa67407477f20d102
msgid "First things first, setup :doc:`QubesBuilder </developer/building/qubes-builder>`. This guide assumes you’re using qubes-builder to build Qubes."
msgstr ""

#: ../../../developer/building/development-workflow.rst:12
#: f835bcff5276488caaf8834393f37aa4
msgid "Repositories and committing Code"
msgstr ""

#: ../../../developer/building/development-workflow.rst:15
#: f9123d9a88b14efb9fb0f14c23870f56
msgid "Qubes is split into a bunch of git repos. These are all contained in the ``qubes-src`` directory under qubes-builder. Subdirectories there are separate components, stored in separate git repositories."
msgstr ""

#: ../../../developer/building/development-workflow.rst:19
#: 9eb3862465d744d7bdaea33a65ba6a19
msgid "The best way to write and contribute code is to create a git repo somewhere (e.g., github) for the repo you are interested in editing (e.g., ``qubes-manager``, ``core-agent-linux``, etc). To integrate your repo with the rest of Qubes, cd to the repo directory and add your repository as a remote in git"
msgstr ""

#: ../../../developer/building/development-workflow.rst:25
#: 556c578bf26e4efd80ac8bfbcb317257
msgid "**Example:**"
msgstr ""

#: ../../../developer/building/development-workflow.rst:34
#: 970b440bcd2041e58614a1f3f1ccdb7f
msgid "You can then proceed to easily develop in your own branches, pull in new commits from the dev branches, merge them, and eventually push to your own repo on github."
msgstr ""

#: ../../../developer/building/development-workflow.rst:38
#: a4c1b1aa6e84496aad598977b7075f3a
msgid "When you are ready to submit your changes to Qubes to be merged, push your changes, then create a signed git tag (using ``git tag -s``). Finally, send a letter to the Qubes listserv describing the changes and including the link to your repository. You can also create pull request on github. Don’t forget to include your public PGP key you use to sign your tags."
msgstr ""

#: ../../../developer/building/development-workflow.rst:46
#: 7d37336a001d46f6a2f32a6335f5b43f
msgid "Kernel-specific notes"
msgstr ""

#: ../../../developer/building/development-workflow.rst:50
#: 005d9319e98e47a99b1cd39a8d96ff3e
msgid "Prepare fresh version of kernel sources, with Qubes-specific patches applied"
msgstr ""

#: ../../../developer/building/development-workflow.rst:53
#: ../../../developer/building/development-workflow.rst:80
#: d1ce658af598416189b343596ea0d21f
#: ae103cebfe4d4e3e9850f877cb5a1b14
msgid "In qubes-builder/qubes-src/linux-kernel:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:61
#: b3e112d3680c4dd1ae9c22e72aa5e6c8
msgid "The resulting tree will be in kernel-<VERSION>/linux-<VERSION>:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:77
#: 507cf22817cd4cde814d759c076ac31d
msgid "Go to the kernel tree and update the version"
msgstr ""

#: ../../../developer/building/development-workflow.rst:89
#: 58c37767a22e4a539f0460da853b54eb
msgid "Changing the config"
msgstr ""

#: ../../../developer/building/development-workflow.rst:92
#: 2cfd338b1d5547e9b3306b68b5ad0227
msgid "In kernel-3.4.18/linux-3.4.18:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:101
#: cf44464a5b65423597e6e1a1c76dd5c3
msgid "Now change the configuration. For example, in kernel-3.4.18/linux-3.4.18:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:110
#: f271068bc1aa4939b844d3adc569d46f
msgid "Copy the modified config back into the kernel tree:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:119
#: ed80fe96f145463e9f914c2b06600797
msgid "Patching the code"
msgstr ""

#: ../../../developer/building/development-workflow.rst:122
#: 64da9e837ee24401b6e215ebc65ac39b
msgid "TODO: describe the workflow for patching the code, below are some random notes, not working well"
msgstr ""

#: ../../../developer/building/development-workflow.rst:146
#: 7bf62f36cfbf4576abc8d769b886b16e
msgid "Building RPMs"
msgstr ""

#: ../../../developer/building/development-workflow.rst:149
#: d5f5c42da14347c3aa756b840d5fe3d7
msgid "TODO: Is this step generic for all subsystems?"
msgstr ""

#: ../../../developer/building/development-workflow.rst:151
#: 973df015d91040b9b30bd5e0fcb6838a
msgid "Now it is a good moment to make sure you have changed kernel release name in rel file. For example, if you change it to ‘1debug201211116c’ the resulting RPMs will be named ‘kernel-3.4.18-1debug20121116c.pvops.qubes.x86_64.rpm’. This will help distinguish between different versions of the same package."
msgstr ""

#: ../../../developer/building/development-workflow.rst:157
#: fe5d60d819784b59b9cdae6db8b187a8
msgid "You might want to take a moment here to review (git diff, git status), commit your changes locally."
msgstr ""

#: ../../../developer/building/development-workflow.rst:160
#: 45633505d5d24486baa32e05e300004e
msgid "To actually build RPMs, in qubes-builder:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:168
#: 2c552116cc684b72a4ac6230d8abd1f5
msgid "RPMs will appear in qubes-src/linux-kernel/pkgs/fc20/x86_64:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:182
#: ca67c113247a4b2eb63682e07290e42c
msgid "Useful :doc:`QubesBuilder </developer/building/qubes-builder>` commands"
msgstr ""

#: ../../../developer/building/development-workflow.rst:185
#: accf0fb09ac74301a718779a24d8c6ed
msgid "``make check`` - will check if all the code was committed into repository and if all repository are tagged with signed tag."
msgstr ""

#: ../../../developer/building/development-workflow.rst:188
#: dc9f108852f14a7d8715afb2601f8302
msgid "``make show-vtags`` - show version of each component (based on git tags) - mostly useful just before building ISO. **Note:** this will not show version for components containing changes since last version tag."
msgstr ""

#: ../../../developer/building/development-workflow.rst:193
#: 1e0150054d354435837085df3575084b
msgid "``make push`` - push change from **all** repositories to git server. You must set proper remotes (see above) for all repositories first."
msgstr ""

#: ../../../developer/building/development-workflow.rst:196
#: 39667157c52a4d9b86f3bc480102ae6f
msgid "``make prepare-merge`` - fetch changes from remote repositories (can be specified on commandline via GIT_SUBDIR or GIT_REMOTE vars), (optionally) verify tags and show the changes. This do not merge the changes - there are left for review as FETCH_HEAD ref. You can merge them using ``git merge FETCH_HEAD`` (in each repo directory). Or ``make do-merge`` to merge all of them."
msgstr ""

#: ../../../developer/building/development-workflow.rst:206
#: e2124ef567f944eab12796f26790d6c3
msgid "Copying Code to dom0"
msgstr ""

#: ../../../developer/building/development-workflow.rst:209
#: 903ac95e528b4ca49f282bf9b2e9e53f
msgid "When developing it is convenient to be able to rapidly test changes. Assuming you’re developing Qubes on Qubes, you should be working in a special VM for Qubes and occasionally you will want to transfer code or RPMs back to dom0 for testing."
msgstr ""

#: ../../../developer/building/development-workflow.rst:214
#: 9641f9ba5c71401781ec6f5bd445ca31
msgid "Here are some handy scripts Marek has shared to facilitate this."
msgstr ""

#: ../../../developer/building/development-workflow.rst:216
#: 202fcff0d03140bdadb43678424897f6
msgid "You may also like to run your :doc:`test environment on separate machine </developer/debugging/test-bench>`."
msgstr ""

#: ../../../developer/building/development-workflow.rst:219
#: 403ca3b4115047099c9e42a4a538ed69
msgid "Syncing dom0 files"
msgstr ""

#: ../../../developer/building/development-workflow.rst:222
#: 13a45b361a7444ce85746331b81b47a2
msgid "TODO: edit this script to be more generic"
msgstr ""

#: ../../../developer/building/development-workflow.rst:252
#: 3eb6f299fb5142078916d7ed2bc97efc
msgid "Apply qvm-tools"
msgstr ""

#: ../../../developer/building/development-workflow.rst:255
#: c109f80cfd7b40eabc3e436ac8d6d1e4
msgid "TODO: make it more generic"
msgstr ""

#: ../../../developer/building/development-workflow.rst:269
#: 6a26de475b2144da9670736d9b04166f
msgid "Copy from dom0 to an appvm"
msgstr ""

#: ../../../developer/building/development-workflow.rst:288
#: 1ed200d8fbb047aeadb3589575bbe2e0
msgid "Git connection between VMs"
msgstr ""

#: ../../../developer/building/development-workflow.rst:291
#: 2071b6fdd74140e680e38a7acfd60063
msgid "Sometimes it’s useful to transfer git commits between VMs. You can use ``git format-patch`` for that and simply copy the files. But you can also setup custom qrexec service for it."
msgstr ""

#: ../../../developer/building/development-workflow.rst:295
#: 1a5bb489424d4afb90385450be4c7889
msgid "Below example assumes that you use ``builder-RX`` directory in target VM to store sources in qubes-builder layout (where ``X`` is some number). Make sure that all the scripts are executable."
msgstr ""

#: ../../../developer/building/development-workflow.rst:299
#: 4b9b7262b4e841a1a3844ba967d1108e
msgid "Service file (save in ``/usr/local/etc/qubes-rpc/local.Git`` in target VM):"
msgstr ""

#: ../../../developer/building/development-workflow.rst:329
#: 37297389d4e2403eb0298243f6a4a3bc
msgid "Client script (save in ``~/bin/git-qrexec`` in source VM):"
msgstr ""

#: ../../../developer/building/development-workflow.rst:341
#: 907764e231b34758b7b78af3a2fa2f62
msgid "You will also need to setup qrexec policy in dom0 (``/etc/qubes-rpc/policy/local.Git``)."
msgstr ""

#: ../../../developer/building/development-workflow.rst:344
#: e037dda98bc1451682242a09197d407e
msgid "Usage:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:353
#: c3b81d2713384eb38f0ed8630d4d6cd0
msgid "You can create ``~/bin/add-remote`` script to ease adding remotes:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:370
#: 1fa87fdc9e134c3780e2b9227716f6ea
msgid "It should be executed from component top level directory. This script takes one argument - remote name. If it is ``tb``, then it creates qrexec-based git remote to ``testbuilder`` VM. Otherwise it creates remote pointing at github account of the same name. In any case it points at repository matching current directory name."
msgstr ""

#: ../../../developer/building/development-workflow.rst:377
#: 2579a9b40f0e4c2fa8c699f098ac1152
msgid "Sending packages to different VM"
msgstr ""

#: ../../../developer/building/development-workflow.rst:380
#: e7da32dc3b0c4c46b5faa61f9914b646
msgid "Other useful script(s) can be used to setup local package repository hosted in some VM. This way you can keep your development VM behind firewall, while having an option to expose some yum/apt repository to the local network (to have them installed on test machine)."
msgstr ""

#: ../../../developer/building/development-workflow.rst:385
#: e3e7e5c37ce54c458e21d2e52f55e40c
msgid "To achieve this goal, a dummy repository can be created, which instead of populating metadata locally, will upload the packages to some other VM and trigger repository update there (using qrexec). You can use ``unstable`` repository flavor, because there is no release managing rules bundled (unlike current and current-testing)."
msgstr ""

#: ../../../developer/building/development-workflow.rst:392
#: 61da38b183dd495da92c6a71cab74200
msgid "RPM packages - yum repo"
msgstr ""

#: ../../../developer/building/development-workflow.rst:395
#: 912960ccacb546438cca415b282e6dd9
msgid "In source VM, grab `linux-yum <https://github.com/QubesOS/qubes-linux-yum>`__ repository (below is assumed you’ve made it in ``~/repo-yum-upload`` directory) and replace ``update_repo.sh`` script with:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:415
#: c30f78d80dc847c999c65c1f3a5150b6
msgid "In target VM, setup actual yum repository (also based on `linux-yum <https://github.com/QubesOS/qubes-linux-yum>`__, this time without modifications). You will also need to setup some gpg key for signing packages (it is possible to force yum to install unsigned packages, but it isn’t possible for ``qubes-dom0-update`` tool). Fill ``~/.rpmmacros`` with key description:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:428
#: 74725785c80542bf915af6a0b1851271
msgid "Then setup ``local.UpdateYum`` qrexec service (``/usr/local/etc/qubes-rpc/local.UpdateYum``):"
msgstr ""

#: ../../../developer/building/development-workflow.rst:463
#: 8c28199a98e44a29b1e23c9d3cd34775
msgid "Of course you will also need to setup qrexec policy in dom0 ``/etc/qubes-rpc/policy/local.UpdateYum``."
msgstr ""

#: ../../../developer/building/development-workflow.rst:466
#: 593780c6fbfc4975b05563147c050c3b
msgid "If you want to access the repository from network, you need to setup HTTP server serving it, and configure the system to let other machines actually reach this HTTP server. You can use for example using :ref:`port forwarding <user/security-in-qubes/firewall:port forwarding to a qube from the outside world>` or setting up Tor hidden service. Configuration details of those services are outside of the scope of this page."
msgstr ""

#: ../../../developer/building/development-workflow.rst:472
#: 58535035c9f543ba85827e9ff29b00b0
msgid "Usage: setup ``builder.conf`` in source VM to use your dummy-uploader repository:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:481
#: a10c1184f78b4478b50d7f3da585df8b
msgid "Then use ``make update-repo-unstable`` to upload the packages. You can also specify selected components on command line, then build them and upload to the repository:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:491
#: b86f6f4b0d26485899ce662e257fc812
msgid "On the test machine, add yum repository (``/etc/yum.repos.d``) pointing at just configured HTTP server. For example:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:502
#: e43632f7f07a463583b2c4801e28d6cf
msgid "Remember to also import gpg public key using ``rpm --import``."
msgstr ""

#: ../../../developer/building/development-workflow.rst:505
#: 1cbfaf6f11e94e7cbf13ffd38a2067e8
msgid "Deb packages - Apt repo"
msgstr ""

#: ../../../developer/building/development-workflow.rst:508
#: 2ae85eb8decd4db8b20bccb1e94ac769
msgid "Steps are mostly the same as in the case of yum repo. The only details that differ:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:511
#: 087224302425491596047171fec5eaba
msgid "use `linux-deb <https://github.com/QubesOS/qubes-linux-deb>`__ instead of `linux-yum <https://github.com/QubesOS/qubes-linux-yum>`__ as a base - both in source and target VM"
msgstr ""

#: ../../../developer/building/development-workflow.rst:515
#: 2dff1df20e5d4197857f19528e883092
msgid "use different ``update_repo.sh`` script in source VM (below)"
msgstr ""

#: ../../../developer/building/development-workflow.rst:517
#: 83be87bd385e410699d63ed6d6e556b4
msgid "use ``local.UpdateApt`` qrexec service in target VM (code below)"
msgstr ""

#: ../../../developer/building/development-workflow.rst:519
#: 6e48aaa6389b4a7984a815471f8871cb
msgid "in target VM additionally place ``update-local-repo.sh`` script in repository dir (code below)"
msgstr ""

#: ../../../developer/building/development-workflow.rst:524
#: 0db63bc6966e44b1931da0afd4690090
msgid "``update_repo.sh`` script:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:542
#: 0ff797972eb74ac9b3f0c63464ceb303
msgid "``local.UpdateApt`` service code (``/usr/local/etc/qubes-rpc/local.UpdateApt`` in repo-serving VM):"
msgstr ""

#: ../../../developer/building/development-workflow.rst:580
#: 37941956f3264a8d9b0fb497caa0f672
msgid "``update-local-repo.sh``:"
msgstr ""

#: ../../../developer/building/development-workflow.rst:640
#: 37da3ffb41ce4732bb149b1e70d68bfb
msgid "Usage: add this line to ``/etc/apt/sources.list`` on test machine (adjust host and path):"
msgstr ""
